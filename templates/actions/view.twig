/* npm imports */
import { inject, injectable } from "inversify";

/* local imports */
import IDENTIFIERS from "../../../config/identifiers";
import { {{EntityDto}} } from "../dtos";
import { {{Entity}} } from "../entities";

/* type imports */
import type { {{ViewEntityRepo}} } from "../repositories";

/**
 * class {{ViewEntityAction}}
 */
@injectable()
class {{ViewEntityAction}} {
  private repo: {{ViewEntityRepo}};

  constructor(
    @inject(IDENTIFIERS.{{ViewEntityRepo}})
    repo: {{ViewEntityRepo}}
  ) {
    this.repo = repo;
  }

  public async handle(id: string): Promise<{{EntityDto}}> {
    const dto = await this.repo.findOne(id);

    if (dto === null) {
      throw new Error("{{Entity}} not found");
    }

    return {{Entity}}.create(dto).jsonify();
  }
}

export default {{ViewEntityAction}};

/* npm imports */
import { injectable } from "inversify";
import { MongoDbClient } from "@powerkernel/mongodb-client";
import { Binary } from "mongodb";

/* local imports */
import { {{EntityDto}} } from "../../domains/{{EntityDir}}/dtos";

/* type imports */
import type { {{ViewEntityRepo}} } from "../../domains/{{EntityDir}}/repositories";

/**
 * class {{ViewEntityMongoRepo}}
 */
@injectable()
class {{ViewEntityMongoRepo}} implements {{ViewEntityRepo}} {
  async findOne(id: string): Promise<{{EntityDto}} | null> {
    const db = MongoDbClient.db;

    const item = await db
      .collection("{{EntityCollection}}")
      .findOne({ _id: MongoDbClient.createUuid(id) });

    if (item) {
      return {
        id: MongoDbClient.stringifyUuid(item._id as unknown as Binary),
        title: item.title,
        createdAt: item.createdAt,
        updatedAt: item.updatedAt,
      };
    }
    return null;
  }
}

export default {{ViewEntityMongoRepo}};
